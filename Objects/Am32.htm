<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Am32.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Am32.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Wed Jan 11 10:14:00 2023
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">ADC1_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_CMP_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_CMP_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f4xx_it.o(.text.BusFault_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[e]">CRM_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[13]">DMA1_Channel3_2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[14]">DMA1_Channel5_4_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f4xx_it.o(.text.DebugMon_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[c]">ERTC_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[11]">EXINT15_4_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[f]">EXINT1_0_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[10]">EXINT3_2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f4xx_it.o(.text.HardFault_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[24]">I2C1_ERR_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1e]">I2C1_EVT_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[25]">I2C2_ERR_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1f]">I2C2_EVT_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f4xx_it.o(.text.MemManage_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f4xx_it.o(.text.NMI_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f4xx_it.o(.text.PendSV_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[20]">SPI1_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[21]">SPI2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f4xx_it.o(.text.SVC_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f4xx_it.o(.text.SysTick_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_at32f421.o(.text.SystemInit) referenced from startup_at32f421.o(.text)
 <LI><a href="#[1a]">TMR14_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1b]">TMR15_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1c]">TMR16_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1d]">TMR17_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[16]">TMR1_BRK_OVF_TRG_HALL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[17]">TMR1_CH_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[18]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[19]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[22]">USART1_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[23]">USART2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f4xx_it.o(.text.UsageFault_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[27]">__main</a> from __main.o(!!!main) referenced from startup_at32f421.o(.text)
 <LI><a href="#[28]">crm_periph_clock_enable</a> from at32f421_crm.o(.text.crm_periph_clock_enable) referenced from main.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[30]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[35]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[2a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[31]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[34]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[36]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel5_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ERTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT15_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXINT1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR14_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR15_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR16_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TMR17_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR1_BRK_OVF_TRG_HALL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[38]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recieveBuffer
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[39]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[2e]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[33]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[37]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, system_at32f421.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>checkCrc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(.text.checkCrc))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>

<P><STRONG><a name="[47]"></a>checkForSignal</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, main.o(.text.checkForSignal))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicroseconds
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>crm_ahb_div_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_ahb_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>crm_apb1_div_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_apb1_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>crm_apb2_div_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_apb2_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>crm_clock_source_enable</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_clock_source_enable))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>crm_flag_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
</UL>

<P><STRONG><a name="[28]"></a>crm_periph_clock_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_periph_clock_enable))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[5d]"></a>crm_pll_config</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_pll_config))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>crm_reset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>crm_sysclk_switch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_sysclk_switch))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f421_crm.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
</UL>

<P><STRONG><a name="[4c]"></a>decodeInput</STRONG> (Thumb, 588 bytes, Stack size 0 bytes, main.o(.text.decodeInput))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_CRC_ACK
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendString
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDeviceInfo
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_bin
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeCrc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCrc
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recieveBuffer
</UL>

<P><STRONG><a name="[43]"></a>delayMicroseconds</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.delayMicroseconds))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialwriteChar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialreadChar
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendString
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[6a]"></a>flash_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[6b]"></a>flash_lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[56]"></a>flash_operation_status_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>

<P><STRONG><a name="[40]"></a>flash_operation_wait_for</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_operation_wait_for))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[57]"></a>flash_sector_erase</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_sector_erase))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[69]"></a>flash_unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[58]"></a>flash_word_program</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f421_flash.o(.text.flash_word_program))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_flash_nolib
</UL>

<P><STRONG><a name="[65]"></a>gpio_default_para_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f421_gpio.o(.text.gpio_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>gpio_init</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, at32f421_gpio.o(.text.gpio_init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>jump</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(.text.jump))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
</UL>

<P><STRONG><a name="[32]"></a>main</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recieveBuffer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[46]"></a>makeCrc</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(.text.makeCrc))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCrc
</UL>

<P><STRONG><a name="[52]"></a>read_flash_bin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, eeprom.o(.text.read_flash_bin))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[67]"></a>recieveBuffer</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, main.o(.text.recieveBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialreadChar
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>save_flash_nolib</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, eeprom.o(.text.save_flash_nolib))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_flag_clear
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[4f]"></a>sendDeviceInfo</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(.text.sendDeviceInfo))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendString
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[53]"></a>sendString</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text.sendString))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialwriteChar
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicroseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDeviceInfo
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[4e]"></a>send_ACK</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(.text.send_ACK))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialwriteChar
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[55]"></a>send_BAD_ACK</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text.send_BAD_ACK))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[54]"></a>send_BAD_CRC_ACK</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(.text.send_BAD_CRC_ACK))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialwriteChar
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[68]"></a>serialreadChar</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, main.o(.text.serialreadChar))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicroseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recieveBuffer
</UL>

<P><STRONG><a name="[3e]"></a>serialwriteChar</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(.text.serialwriteChar))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicroseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_CRC_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendString
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[64]"></a>system_core_clock_update</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, system_at32f421.o(.text.system_core_clock_update))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3d]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serialwriteChar
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_ACK
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[6c]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_CRC_ACK
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ACK
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDeviceInfo
</UL>

<P><STRONG><a name="[4b]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_BAD_CRC_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ACK
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
</UL>

<P><STRONG><a name="[48]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
</UL>

<P><STRONG><a name="[42]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicroseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkForSignal
</UL>

<P><STRONG><a name="[44]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeInput
</UL>

<P><STRONG><a name="[3f]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f421_flash.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>

<P><STRONG><a name="[41]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f421_flash.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
</UL>

<P><STRONG><a name="[5a]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f421_flash.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
</UL>

<P><STRONG><a name="[59]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f421_flash.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
